!function(){"use strict";class e{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeButton()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._cardTitleEl.textContent,link:this._cardImageEl.src})}))}_getTemplate(){return this._cardElement=document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0),this._cardElement}generateCard(){return this._cardElement=this._getTemplate(),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardTitleEl.textContent=this._name,this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.remove(this._errorClass)}_checkInputVaildity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputVaildity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}}class s{constructor(e){let{popUpSelector:t}=e;this._popUpElement=document.querySelector(t),this._popUpCloseButton=this._popUpElement.querySelector(".modal__close")}_handleEscClose=e=>{"Escape"==e.key&&this.close()};open(){this._popUpElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popUpElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popUpCloseButton.addEventListener("click",(()=>{this.close()})),this._popUpElement.addEventListener("click",(e=>{e.target.classList.contains("modal")&&this.close()}))}}class n extends s{constructor(e,t){super({popUpSelector:e}),this._popUpForm=this._popUpElement.querySelector(".modal__form"),this._handleFormSubmit=t}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}_getInputValues(){return this._inputValues={},this._inputList.forEach((e=>{this._inputValues[e.name]=e.value})),this._inputValues}setEventListeners(){this._inputList=this._popUpForm.querySelectorAll(".modal__input"),super.setEventListeners(),this._popUpForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popUpForm.reset()}))}close(){super.close()}}const i={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_error",errorClass:"modal__error"},r="#profile-edit-modal",a="#add-card-modal",o=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._handleResponse)}updateUserProfile(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._handleResponse)}updateAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._handleResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._handleResponse)}createCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._handleResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleResponse())}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._handleResponse())}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._handleResponse())}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"984e74d2-6876-48b9-aa34-b5b7c14e830a","Content-Type":"application/json"}}),l=document.querySelector(".cards__list"),c=document.querySelector("#profile-edit-button"),d=document.querySelector(r).querySelector(".modal__form"),h=(d.querySelector("#profile-title-input"),d.querySelector("#profile-description-input"),document.querySelector("#add-card-button")),u=document.querySelector(a).querySelector(".modal__form"),_=new class{constructor(e,t){let{initialArray:s,renderer:n}=e;this._initialArray=s,this._renderer=n,this._container=t}renderItems(){this._initialArray.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({initialArray:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=b(e);_.addItem(t)}},l);_.renderItems();const p=new class{constructor(e,t){this._name=document.querySelector(e),this._description=document.querySelector(t)}getUserInfo(){return this._userData={name:this._name.textContent.trim(),description:this._description.textContent.trim()},this._userData}setUserInfo(e,t){this._name.textContent=e,this._description.textContent=t}}(".profile__title",".profile__description"),m=new t(i,d),E=new t(i,u);m.enableValidation(),E.enableValidation();const v=new class extends s{constructor(e){super({popUpSelector:e}),this._imagePopUpImageEl=this._popUpElement.querySelector(".modal__image"),this._imagePopUpTitleEl=this._popUpElement.querySelector(".modal__title")}open(e){super.open(),this._imagePopUpImageEl.src=e.link,this._imagePopUpImageEl.alt=e.name,this._imagePopUpTitleEl.textContent=e.name}}("#view-image-modal"),g=new n(r,(function(e){p.setUserInfo(e.title,e.description),g.close()})),f=new n(a,(function(e){const t=b({name:e.title,link:e.url});_.addItem(t),f.close(),E.disableButton()}));function b(t){return new e(t,"#card-template",y).generateCard()}function y(e){v.open(e)}g.setEventListeners(),f.setEventListeners(),v.setEventListeners(),c.addEventListener("click",(()=>{!function(){const e=p.getUserInfo();g.setInputValues({title:e.name,description:e.description}),g.open(),m.resetValidation()}()})),h.addEventListener("click",(()=>{f.open()})),o.getInitialCards().then((e=>console.log(e)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,