!function(){"use strict";class t{constructor(t,e,s){this._name=t.name,this._link=t.link,this._cardSelector=e,this._handleImageClick=s}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeButton()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this._cardTitleEl.textContent,link:this._cardImageEl.src})}))}_getTemplate(){return this._cardElement=document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0),this._cardElement}generateCard(){return this._cardElement=this._getTemplate(),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardTitleEl.textContent=this._name,this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._setEventListeners(),this._cardElement}}class e{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=e,this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.remove(this._errorClass)}_checkInputVaildity(t){if(!t.validity.valid)return this._showInputError(t);this._hideInputError(t)}_hasInvalidInput(t){return!t.every((t=>t.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_hasInvalidInput(){return!this._inputElements.every((t=>t.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputElements.forEach((t=>{t.addEventListener("input",(e=>{this._checkInputVaildity(t),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputElements.forEach((t=>{this._hideInputError(t)}))}}class s{constructor(t){let{popUpSelector:e}=t;this._popUpElement=document.querySelector(e),this._popUpCloseButton=this._popUpElement.querySelector(".modal__close")}_handleEscClose=t=>{"Escape"==t.key&&this.close()};open(){this._popUpElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popUpElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popUpCloseButton.addEventListener("click",(()=>{this.close()})),this._popUpElement.addEventListener("click",(t=>{t.target.classList.contains("modal")&&this.close()}))}}class n extends s{constructor(t,e){super({popUpSelector:t}),this._popUpForm=this._popUpElement.querySelector(".modal__form"),this._handleFormSubmit=e}setInputValues(t){this._inputList.forEach((e=>{e.value=t[e.name]}))}_getInputValues(){return this._inputValues={},this._inputList.forEach((t=>{this._inputValues[t.name]=t.value})),this._inputValues}setEventListeners(){this._inputList=this._popUpForm.querySelectorAll(".modal__input"),super.setEventListeners(),this._popUpForm.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popUpForm.reset()}))}close(){super.close()}}const i={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_error",errorClass:"modal__error"},r="#profile-edit-modal",o="#add-card-modal",a=document.querySelector(".cards__list"),l=document.querySelector("#profile-edit-button"),c=document.querySelector(r).querySelector(".modal__form"),u=(c.querySelector("#profile-title-input"),c.querySelector("#profile-description-input"),document.querySelector("#add-card-button")),d=document.querySelector(o).querySelector(".modal__form"),_=new class{constructor(t,e){let{initialArray:s,renderer:n}=t;this._initialArray=s,this._renderer=n,this._container=e}renderItems(){this._initialArray.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}}({initialArray:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:t=>{const e=S(t);_.addItem(e)}},a);_.renderItems();const p=new class{constructor(t,e){this._name=document.querySelector(t),this._description=document.querySelector(e)}getUserInfo(){return this._userData={name:this._name.textContent.trim(),description:this._description.textContent.trim()},this._userData}setUserInfo(t,e){this._name.textContent=t,this._description.textContent=e}}(".profile__title",".profile__description"),m=new e(i,c),h=new e(i,d);m.enableValidation(),h.enableValidation();const E=new class extends s{constructor(t){super({popUpSelector:t}),this._imagePopUpImageEl=this._popUpElement.querySelector(".modal__image"),this._imagePopUpTitleEl=this._popUpElement.querySelector(".modal__title")}open(t){super.open(),this._imagePopUpImageEl.src=t.link,this._imagePopUpImageEl.alt=t.name,this._imagePopUpTitleEl.textContent=t.name}}("#view-image-modal"),v=new n(r,(function(t){p.setUserInfo(t.title,t.description),v.close()})),g=new n(o,(function(t){const e=S({name:t.title,link:t.url});_.addItem(e),g.close(),h.disableButton()}));function S(e){return new t(e,"#card-template",y).generateCard()}function y(t){E.open(t)}v.setEventListeners(),g.setEventListeners(),E.setEventListeners(),l.addEventListener("click",(()=>{!function(){const t=p.getUserInfo();v.setInputValues({title:t.name,description:t.description}),v.open(),m.resetValidation()}()})),u.addEventListener("click",(()=>{g.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,